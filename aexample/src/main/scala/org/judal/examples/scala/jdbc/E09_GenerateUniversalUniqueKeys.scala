package org.judal.examples.scala.jdbc

import org.junit.Test

import org.scalatest.Suite

import com.knowgate.stringutils.Uid

/**
 * Example of different kinds of unique keys
 * that can be generated by the base library.
 */
class E09_GenerateUniversalUniqueKeys extends Suite {

	@Test def demo() = {

		// Generate a Global Unique ID (GUID) of 32 characters length
		val guid32 : String = Uid.createUniqueKey()
		
		// Create a GUID of 32 characters length that increases on each call
		val sortableGuid32 : String = Uid.createTimeDependentKey()
		
		// Create a 64 characters GUID which decreases over time
		val guid64 : String = Uid.generateReverseTimestampId()
		
		// Generate a random (potentially non-unique) Id. of length specified using the given characters
		val idLength = 8
		val charsToUse = "23456789ABCDEFGHJMNPRTXYZ"
		val customId : String = Uid.generateRandomId(idLength, charsToUse, Character.UNASSIGNED)
	}

}
